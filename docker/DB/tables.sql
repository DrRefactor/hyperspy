SET @OLD_UNIQUE_CHECKS = @@UNIQUE_CHECKS, UNIQUE_CHECKS = 0;
SET @OLD_FOREIGN_KEY_CHECKS = @@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS = 0;
-- SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- Schema HYPERSPY

CREATE SCHEMA IF NOT EXISTS HYPERSPY
  DEFAULT CHARACTER SET utf8;

USE HYPERSPY;

-- Table CITY
DROP TABLE IF EXISTS CITY;
CREATE TABLE IF NOT EXISTS CITY
(
  ID          INT         NOT NULL AUTO_INCREMENT PRIMARY KEY,
  NAME        VARCHAR(45) NOT NULL,
  POSTAL_CODE VARCHAR(20) NOT NULL,
  COUNTRY     VARCHAR(45) NOT NULL
);

-- Table INFRASTRUCTURE_ELEMENT_TYPE
DROP TABLE IF EXISTS INFRASTRUCTURE_ELEMENT_TYPE;
CREATE TABLE IF NOT EXISTS INFRASTRUCTURE_ELEMENT_TYPE
(
  ID   INT         NOT NULL AUTO_INCREMENT PRIMARY KEY,
  TYPE VARCHAR(45) NOT NULL UNIQUE
);

INSERT INTO INFRASTRUCTURE_ELEMENT_TYPE (TYPE) VALUES ('STATION'), ('CONNECTION');

-- Table STATE_TYPE
DROP TABLE IF EXISTS STATE_TYPE;
CREATE TABLE IF NOT EXISTS STATE_TYPE
(
  ID   INT         NOT NULL AUTO_INCREMENT PRIMARY KEY,
  TYPE VARCHAR(45) NOT NULL UNIQUE
);

INSERT INTO STATE_TYPE (TYPE) VALUES ('OK'), ('DISABLED'), ('WARNING');

-- Table STATE
DROP TABLE IF EXISTS STATE;
CREATE TABLE IF NOT EXISTS STATE
(
  ID            INT      NOT NULL AUTO_INCREMENT PRIMARY KEY,
  STATE_TYPE_ID INT      NOT NULL,
  DESCRIPTION   LONGTEXT NOT NULL,
  CONSTRAINT fk_STATE_TYPE
  FOREIGN KEY (STATE_TYPE_ID)
  REFERENCES STATE_TYPE (ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
);

-- Table INFRASTRUCTURE_ELEMENT
DROP TABLE IF EXISTS INFRASTRUCTURE_ELEMENT;
CREATE TABLE IF NOT EXISTS INFRASTRUCTURE_ELEMENT
(
  ID                             INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  INFRASTRUCTURE_ELEMENT_TYPE_ID INT NOT NULL,
  STATE_ID                       INT NOT NULL UNIQUE,
  CONSTRAINT fk_INFRASTRUCTURE_ELEMENT_TYPE
  FOREIGN KEY (INFRASTRUCTURE_ELEMENT_TYPE_ID)
  REFERENCES INFRASTRUCTURE_ELEMENT_TYPE (ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_STATE
  FOREIGN KEY (STATE_ID)
  REFERENCES STATE (ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
);

-- Table STATION
DROP TABLE IF EXISTS STATION;
CREATE TABLE IF NOT EXISTS STATION
(
  ID           INT           NOT NULL PRIMARY KEY,
  CITY_ID      INT           NOT NULL,
  PLATFORMS_NO INT           NOT NULL DEFAULT 0,
  COOR_X       DECIMAL(6, 3) NOT NULL,
  COOR_Y       DECIMAL(6, 3) NOT NULL,
  CONSTRAINT fk_STATION_CITY
  FOREIGN KEY (CITY_ID)
  REFERENCES CITY (ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_STATION_INFRASTRUCTURE_ELEMENT
  FOREIGN KEY (ID)
  REFERENCES INFRASTRUCTURE_ELEMENT (ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
);

-- Table CONNECTION
DROP TABLE IF EXISTS CONNECTION;
CREATE TABLE IF NOT EXISTS CONNECTION
(
  ID            INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  START_STATION INT NOT NULL,
  END_STATION   INT NOT NULL,
  DISTANCE      INT NOT NULL,
  MAX_SPEED     INT NOT NULL,
  CONSTRAINT fk_CONNECTION_INFRASTRUCTURE_ELEMENT
  FOREIGN KEY (ID)
  REFERENCES INFRASTRUCTURE_ELEMENT (ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_CONNECTION_START
  FOREIGN KEY (START_STATION)
  REFERENCES STATION (ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_CONNECTION_END_STATION
  FOREIGN KEY (END_STATION)
  REFERENCES STATION (ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT connection_unique UNIQUE (START_STATION, END_STATION)
);

-- Table LINE
DROP TABLE IF EXISTS LINE;
CREATE TABLE IF NOT EXISTS LINE
(
  ID   INT         NOT NULL AUTO_INCREMENT PRIMARY KEY,
  NAME VARCHAR(45) NULL UNIQUE
);

-- Table TIMETABLE
DROP TABLE IF EXISTS TIMETABLE;
CREATE TABLE IF NOT EXISTS TIMETABLE
(
  ID      INT      NOT NULL AUTO_INCREMENT PRIMARY KEY,
  LINE_ID INT      NOT NULL,
  FROM_DATE  DATETIME NOT NULL,
  UNTIL   DATETIME NOT NULL,
  CONSTRAINT fk_TIMETABLE_LINE
  FOREIGN KEY (LINE_ID)
  REFERENCES LINE (ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
);

-- Table TIMETABLE_DAY
DROP TABLE IF EXISTS TIMETABLE_DAY;
CREATE TABLE IF NOT EXISTS TIMETABLE_DAY
(
  DAY_OF_WEEK INT NOT NULL AUTO_INCREMENT PRIMARY KEY
);

INSERT INTO TIMETABLE_DAY () VALUES
  (), (), (), (), (), (), ();

-- Table CAPSULE_TYPE
DROP TABLE IF EXISTS CAPSULE_TYPE;
CREATE TABLE IF NOT EXISTS CAPSULE_TYPE
(
  MODEL      INT         NOT NULL AUTO_INCREMENT PRIMARY KEY,
  MODEL_DESC VARCHAR(45) NOT NULL UNIQUE,
  SEATS_NO   INT         NOT NULL
);

-- Table CAPSULE
DROP TABLE IF EXISTS CAPSULE;
CREATE TABLE IF NOT EXISTS CAPSULE
(
  SIDE_NO         INT         NOT NULL AUTO_INCREMENT PRIMARY KEY,
  PRODUCTION_DATE DATE        NOT NULL,
  CAPSULE_TYPE_ID INT         NOT NULL,
  SERIAL_NO       VARCHAR(45) NOT NULL UNIQUE,
  CURRENT_LINE    INT         NULL,
  STATE_ID        INT         NOT NULL UNIQUE,
  CONSTRAINT fk_CAPSULE_CAPSULE_TYPE
  FOREIGN KEY (CAPSULE_TYPE_ID)
  REFERENCES CAPSULE_TYPE (MODEL)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_CAPSULE_LINE
  FOREIGN KEY (CURRENT_LINE)
  REFERENCES LINE (ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_CAPSULE_STATE
  FOREIGN KEY (STATE_ID)
  REFERENCES STATE (ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
);

-- Table STOPS_ON_ROUTE
DROP TABLE IF EXISTS STOPS_ON_ROUTE;
CREATE TABLE IF NOT EXISTS STOPS_ON_ROUTE
(
  LINE_ID     INT NOT NULL,
  STATION_ID  INT NOT NULL,
  SEQUENCE_NO INT NOT NULL,
  CONSTRAINT fk_STATION_LINE
  FOREIGN KEY (LINE_ID)
  REFERENCES LINE (ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_STOPS_ON_ROUTE_STATION
  FOREIGN KEY (STATION_ID)
  REFERENCES STATION (ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT unique_in_seq UNIQUE (LINE_ID, SEQUENCE_NO),
  CONSTRAINT unique_station UNIQUE (LINE_ID, STATION_ID),
  INDEX sequence_idx (LINE_ID, SEQUENCE_NO)
);

-- Table TIMETABLE_AT_TIMETABLE_DAY
DROP TABLE IF EXISTS TIMETABLE_AT_TIMETABLE_DAY;
CREATE TABLE IF NOT EXISTS TIMETABLE_AT_TIMETABLE_DAY
(
  TIMETABLE_ID              INT NOT NULL,
  TIMETABLE_DAY_DAY_OF_WEEK INT NOT NULL,
  PRIMARY KEY (TIMETABLE_ID, TIMETABLE_DAY_DAY_OF_WEEK),
  CONSTRAINT fk_TIMETABLE_has_TIMETABLE_DAY_TIMETABLE
  FOREIGN KEY (TIMETABLE_ID)
  REFERENCES TIMETABLE (ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_TIMETABLE_has_TIMETABLE_DAY_TIMETABLE_DAY
  FOREIGN KEY (TIMETABLE_DAY_DAY_OF_WEEK)
  REFERENCES TIMETABLE_DAY (DAY_OF_WEEK)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
);

-- Table TIMETABLE_TIME_FREQ
DROP TABLE IF EXISTS TIMETABLE_TIME_FREQ;
CREATE TABLE IF NOT EXISTS TIMETABLE_TIME_FREQ
(
  START_HOUR   TIME NOT NULL,
  TIMETABLE_ID INT  NOT NULL,
  FREQUENCY    INT  NULL,
  INDEX fk_TIMETABLE_TIME_FREQ_TIMETABLE_idx (TIMETABLE_ID, START_HOUR ASC),
  CONSTRAINT unique_start_time UNIQUE (TIMETABLE_ID, START_HOUR),
  CONSTRAINT fk_TIMETABLE_TIME_FREQ_TIMETABLE
  FOREIGN KEY (TIMETABLE_ID)
  REFERENCES TIMETABLE (ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
);

-- Table WHERE_IS_CAPSULE
DROP TABLE IF EXISTS WHERE_IS_CAPSULE;
CREATE TABLE IF NOT EXISTS WHERE_IS_CAPSULE
(
  CAPSULE_SIDE_NO           INT      NOT NULL UNIQUE,
  INFRASTRUCTURE_ELEMENT_ID INT      NOT NULL,
  START_TIME                DATETIME NOT NULL,
  CONSTRAINT fk_WHERE_IS_CAPSULE_CAPSULE
  FOREIGN KEY (CAPSULE_SIDE_NO)
  REFERENCES CAPSULE (SIDE_NO)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT fk_WHERE_IS_CAPSULE_INFRASTRUCTURE_ELEMENT
  FOREIGN KEY (INFRASTRUCTURE_ELEMENT_ID)
  REFERENCES INFRASTRUCTURE_ELEMENT (ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
);

-- SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS = @OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS = @OLD_UNIQUE_CHECKS;
